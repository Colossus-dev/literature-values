import React, { useState, useEffect } from 'react';

const VALUE_OPTIONS = [
    '–ï—Ä–ª—ñ–∫', '–ê–¥–∞–ª–¥—ã“õ', '–û—Ç–∞–Ω—Å“Ø–π–≥—ñ—à—Ç—ñ–∫', '–ë—ñ–ª—ñ–º', '–ú–µ–π—ñ—Ä—ñ–º–¥—ñ–ª—ñ–∫', '–°–∞–±—ã—Ä–ª—ã“õ', '–°“Ø–π—ñ—Å–ø–µ–Ω—à—ñ–ª—ñ–∫'
];

const ValueReflection = () => {
    const [selectedValue, setSelectedValue] = useState('');
    const [answer, setAnswer] = useState('');
    const [saved, setSaved] = useState(false);

    useEffect(() => {
        const savedData = JSON.parse(localStorage.getItem('my-value-reflection'));
        if (savedData) {
            setSelectedValue(savedData.value);
            setAnswer(savedData.text);
        }
    }, []);

    const handleSave = () => {
        if (!selectedValue || !answer.trim()) {
            alert('”®—Ç—ñ–Ω–µ–º—ñ–∑, –±–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑!');
            return;
        }

        localStorage.setItem(
            'my-value-reflection',
            JSON.stringify({ value: selectedValue, text: answer })
        );
        setSaved(true);
        setTimeout(() => setSaved(false), 2000);
    };

    return (
        <div className="bg-white p-8 rounded-3xl shadow-xl max-w-2xl mx-auto animate-fade-in">
            <h2 className="text-3xl font-extrabold text-teal-700 mb-6 text-center">
                üí≠ –°–µ–Ω —Ç–∞“£–¥–∞“ì–∞–Ω “õ“±–Ω–¥—ã–ª—ã“õ
            </h2>

            <label className="block mb-2 font-medium text-gray-700">“ö–∞–π “õ“±–Ω–¥—ã–ª—ã“õ—Ç—ã —Ç–∞“£–¥–∞–¥—ã“£?</label>
            <select
                value={selectedValue}
                onChange={(e) => setSelectedValue(e.target.value)}
                className="w-full mb-6 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-400"
            >
                <option value="" disabled>“ö“±–Ω–¥—ã–ª—ã“õ—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑...</option>
                {VALUE_OPTIONS.map((val, i) => (
                    <option key={i} value={val}>{val}</option>
                ))}
            </select>

            <label className="block mb-2 font-medium text-gray-700">–û—Å—ã “õ“±–Ω–¥—ã–ª—ã“õ —Ç—É—Ä–∞–ª—ã –æ–π—ã“£</label>
            <textarea
                value={answer}
                onChange={(e) => setAnswer(e.target.value)}
                rows="5"
                className="w-full p-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-400"
                placeholder="–ë“±–ª “õ“±–Ω–¥—ã–ª—ã“õ —Å–µ–Ω “Ø—à—ñ–Ω –Ω–µ –±—ñ–ª–¥—ñ—Ä–µ–¥—ñ? –ú—ã—Å–∞–ª –∫–µ–ª—Ç—ñ—Ä."
            ></textarea>

            <button
                onClick={handleSave}
                className="mt-6 bg-teal-600 text-white px-6 py-3 rounded-full hover:bg-teal-700 transition-all shadow-md"
            >
                üíæ –°–∞“õ—Ç–∞—É
            </button>

            {saved && (
                <p className="text-green-600 mt-4 text-sm text-center animate-fade-in">
                    ‚úÖ –†–µ—Ñ–ª–µ–∫—Å–∏—è —Å”ô—Ç—Ç—ñ —Å–∞“õ—Ç–∞–ª–¥—ã!
                </p>
            )}
        </div>
    );
};

export default ValueReflection;
